name: CI

on:
  push:
    branches: [main]
  pull_request: {}

jobs:
  eslint:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          node-version: ['lts/hydrogen']
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        # not caching node_modules because `npm ci` removes it
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      run: npm ci
    - name: Run eslint
      run: npm run lint
  stylelint:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          node-version: ['lts/hydrogen']
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        # not caching node_modules because `npm ci` removes it
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      run: npm ci
    - name: Run stylelint
      run: npm run lint:css
  jest:
    needs: [eslint, stylelint]
    runs-on: ubuntu-latest
    strategy:
        matrix:
          node-version: ['lts/hydrogen']
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache node modules
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        # not caching node_modules because `npm ci` removes it
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Install dependencies
      run: npm ci
    - name: Run Jest tests
      run: npm run test
    - name: Upload coverage to codecov
      uses: codecov/codecov-action@v3
  # playwright:
  #   needs: [eslint, stylelint]
  #   runs-on: ubuntu-latest
  #   strategy:
  #       matrix:
  #         node-version: ['lts/hydrogen']
  #         shard: [1/3, 2/3, 3/3]
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v3
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v3
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #   - name: Cache node modules
  #     uses: actions/cache@v3
  #     env:
  #       cache-name: cache-node-modules
  #     with:
  #       # npm cache files are stored in `~/.npm` on Linux/macOS
  #       # not caching node_modules because `npm ci` removes it
  #       path: ~/.npm
  #       key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
  #       restore-keys: |
  #         ${{ runner.os }}-build-${{ env.cache-name }}-
  #         ${{ runner.os }}-build-
  #         ${{ runner.os }}-
  #   - name: Install dependencies
  #     run: npm ci
  #   - name: Install Playwright Browsers
  #     run: npx playwright install --with-deps
  #   - name: Copy secrets example file
  #     run: npm run copy-secrets
  #   - name: Prepare for Playwright tests
  #     run: npm run playwright:prepare-ci
  #   - name: Run Playwright tests
  #     run: npm run playwright:ci:${{ matrix.shard }}
  #   - name: Upload coverage to codecov
  #     uses: codecov/codecov-action@v3
  #     with:
  #       directory: 'playwright-coverage'
  #   - uses: actions/upload-artifact@v3
  #     if: always()
  #     with:
  #       name: playwright-report
  #       path: |
  #         playwright-report/
  #         test-results/
  #       retention-days: 30

  sync:
    if: success() && github.ref == 'refs/heads/main' # only run on main success
    needs: [jest] # only run after jest and cypress jobs complete
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SSH_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}
    - name: Push to ECC
      run: |
        git remote add ecc ssh://git@git.earthdata.nasa.gov:7999/edsc/earthdata-download.git
        git fetch ecc "+refs/heads/*:refs/remotes/origin/*"

        git fetch --unshallow || true
        echo "GITHUB_COMMIT=$GITHUB_SHA"
        git push ecc $GITHUB_SHA:refs/heads/main
